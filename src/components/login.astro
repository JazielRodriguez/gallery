---
import { app } from "../firebase/server";
import { getAuth } from "firebase-admin/auth";

/* Check if the user is authenticated */
const auth = getAuth(app);
if (Astro.cookies.has("session")) {
  const sessionCookie = Astro!.cookies!.get("session")!.value;
  const decodedCookie = await auth.verifySessionCookie(sessionCookie);
  if (decodedCookie) {
    return Astro.redirect("/dashboard");
  }
}
---
<form action="/api/auth/signin" method="post" class="w-[95%] md:w-fit bg-zinc-800 static z-10 flex flex-col gap-6 py-6 rounded-sm">
  <div class="flex flex-col gap-1 px-8">
    <label for="email" class="text-zinc-400 font-sans">Email</label>
    <input class="w-full md:w-60 h-8 bg-transparent border-zinc-400 border-b-2 outline-none text-base text-zinc-200" type="email" name="email" id="email">
  </div>
  <div class="flex flex-col gap-1 px-8">
    <label for="passwd" class="text-zinc-400 font-sans">Password</label>
    <input class="w-full md:w-60 h-8 bg-transparent border-zinc-400 border-b-2 outline-none text-base text-zinc-200" type="password" name="passwd" id="passwd">
  </div>
  <button type="submit" class="py-4 px-2 mx-8 bg-zinc-400 font-sans rounded-lg">Login</button>
</form>
<script>
  import {
    getAuth,
    inMemoryPersistence,
    signInWithEmailAndPassword,
  } from "firebase/auth";
  import { app } from "../firebase/client";

  const auth = getAuth(app);
  // This will prevent the browser from storing session data
  auth.setPersistence(inMemoryPersistence);

  const form = document.querySelector("form") as HTMLFormElement;
  form.addEventListener("submit", async (e) => {
    e.preventDefault();
    const formData = new FormData(form);
    const email = formData.get("email")?.toString();
    const passwd = formData.get("passwd")?.toString();

    if (!email || !passwd) {
      return;
    }
    const userCredential = await signInWithEmailAndPassword(
      auth,
      email,
      passwd
    );
    const idToken = await userCredential.user.getIdToken();
    const response = await fetch("/api/auth/signin", {
      method: "GET",
      headers: {
        Authorization: `Bearer ${idToken}`,
      },
    });

    if (response.redirected) {
      window.location.assign(response.url);
    }
  });
</script>